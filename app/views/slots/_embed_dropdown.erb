<!-- This example requires Tailwind CSS v2.0+ -->
<div id="embedDropdown-<%= type %>" class="z-10 relative inline-block text-left m-2">
  <div>
    <button v-on:click="toggleMenuState" v-on:blur="closeMenu" id="button__embed-link-<%= type %>" class="inline-flex justify-center w-full rounded-md shadow-sm px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500" id="menu-button" aria-expanded="true" aria-haspopup="true">
      Embed
      <svg class="-mr-1 ml-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
        <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
      </svg>
    </button>
  </div>

  <transition
    enter-active-class="duration-150 ease-out"
    enter-from-class="opacity-0 scale-95"
    enter-to-class="opacity-100 scale-100"
    leave-active-class="duration-100 ease-in"
    leave-from-class="opacity-100 scale-100"
    leave-to-class="opacity-0 scale-95"
  >
    <div v-if="menuOpen" class="filter drop-shadow-lg shadow-lg origin-top-right absolute right-4 mt-2 w-60 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none">
      <div class="py-1">
        <div class="my-1 px-4 flex flex-row justify-between items-center">
          <p class="font-semibold">All slots: </p>
          <div class="">
            <!-- This example requires Tailwind CSS v2.0+ -->
            <span class="relative z-0 inline-flex shadow-sm rounded-md">
            <button v-on:click="copyEmbedLink()" title="copy embed link" class="relative inline-flex items-center px-2 py-1 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule="evenodd" />
              </svg>
            </button>
            <button v-on:click="copyEmbedCode()" title="copy embed code" class="-ml-px relative inline-flex items-center px-2 py-1 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
              </svg>
            </button>
            </span>
          </div>
        </div>

        <% slot_types.each do |slot_type| %>
          <div class="my-1 px-4 flex flex-row justify-between items-center">
            <p class="font-normal"><%= slot_type.name.pluralize %>:</p>
            <div class="">
              <!-- This example requires Tailwind CSS v2.0+ -->
              <span class="relative z-0 inline-flex shadow-sm rounded-md">
            <button v-on:click="copyEmbedLink(<%= slot_type.id %>)" title="copy embed link" class="relative inline-flex items-center px-2 py-1 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule="evenodd" />
              </svg>
            </button>
            <button v-on:click="copyEmbedCode(<%= slot_type.id %>)" title="copy embed code" class="-ml-px relative inline-flex items-center px-2 py-1 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
              </svg>
            </button>
            </span>
            </div>
          </div>
        <% end %>

      </div>
    </div>
  </transition>
</div>

<script>
    var embedDropdown = {
        data() {
            return {
                menuOpen: false,
            };
        },
        methods: {
            toggleMenuState() {
                this.menuOpen = !this.menuOpen;
            },
            closeMenu() {
                this.menuOpen = false;
            },
            copyEmbedLink(slot_type_id) {
                let text;
                let temp_element = document.createElement('input');
                if (slot_type_id) {
                    text = window.location.href + "/embed/" + slot_type_id
                } else {
                    text = window.location.href +  "/embed";
                }

                document.body.appendChild(temp_element);
                temp_element.value = text;
                temp_element.select();
                document.execCommand('copy');
                document.body.removeChild(temp_element);

                let btn = document.getElementById("button__embed-link-<%= type %>")
                btn.innerText = "Link copied"
            },
            copyEmbedCode(slot_type_id) {
                let text;
                let temp_element = document.createElement('input');
                if (slot_type_id) {
                    text = window.location.href + "/embed/" + slot_type_id
                } else {
                  text = window.location.href +  "/embed";
                }

                let embed_code = `<iframe style="width: 80%; height: 400px; margin: 0 auto; border: none" src="${text}"></iframe>`

                document.body.appendChild(temp_element);
                temp_element.value = embed_code;
                temp_element.select();
                document.execCommand('copy');
                document.body.removeChild(temp_element);

                let btn = document.getElementById("button__embed-link-<%= type %>")
                btn.innerText = "Code copied"
            }
        },
    };

    Vue.createApp(embedDropdown).mount("#embedDropdown-<%= type %>");
    console.log("mounted to <%= type %>")
</script>